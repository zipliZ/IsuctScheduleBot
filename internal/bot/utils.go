package bot

import (
	"ScheduleBot/internal/repo"
	"context"
	"encoding/json"
	"fmt"
	"log"
	"net/http"
	"strconv"
	"strings"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func escapeSpecialChars(input string) string {
	replacer := strings.NewReplacer(
		"-", "\\-",
		"|", "\\|",
		".", "\\.",
		"(", "\\(",
		")", "\\)",
	)
	return replacer.Replace(input)
}

func getWeekName(weekNumber int) string {
	if weekNumber%2 == 0 {
		return "–í—Ç–æ—Ä–∞—è"
	}
	return "–ü–µ—Ä–≤–∞—è"
}

func getWeekdayName(weekday int) string {
	weekdays := []string{"–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥—É", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü—É", "–°—É–±–±–æ—Ç—É"}
	if weekday == -1 { // –≤–æ–ø—Ä–æ—Å—ã –∫ —Å–æ–∑–¥–∞—Ç–µ–ª—é api
		return weekdays[0]
	}
	return weekdays[weekday]
}

// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä–æ–∫—É –Ω–∞ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, –µ—Å–ª–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ —á–∏—Å–ª–æ –¥–Ω—è –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ weekDay
func checkWeekDay(message string, weakDay *int) bool {
	switch message {
	case "–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–ø–Ω":
		*weakDay = 1
	case "–≤—Ç–æ—Ä–Ω–∏–∫", "–≤—Ç":
		*weakDay = 2
	case "—Å—Ä–µ–¥–∞", "—Å—Ä":
		*weakDay = 3
	case "—á–µ—Ç–≤–µ—Ä–≥", "—á—Ç":
		*weakDay = 4
	case "–ø—è—Ç–Ω–∏—Ü–∞", "–ø—Ç":
		*weakDay = 5
	case "—Å—É–±–±–æ—Ç–∞", "—Å–±":
		*weakDay = 6
	default:
		return false
	}
	return true
}

func NewMessage(chatId int64, text string, silent bool) tgbotapi.MessageConfig {
	msg := tgbotapi.NewMessage(chatId, text)
	msg.ParseMode = "MarkdownV2"
	msg.DisableNotification = silent
	return msg
}

func formMessage(schedule GetScheduleResponse) string {
	dateString := fmt.Sprintf("_ __*–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ %s, %s –Ω–µ–¥–µ–ª—è*__ _\n\n", getWeekdayName(schedule.Weekday), getWeekName(schedule.Week))
	if len(schedule.Lessons) == 0 || schedule.Lessons[0].Name == "–ù–∞—É—á–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞" && len(schedule.Lessons) == 1 {
		return dateString + "_*–û—Ç–¥—ã—Ö–∞–µ–º*_"
	}
	for _, subject := range schedule.Lessons {
		var audienceString string
		for _, audience := range subject.Audience {
			if audience.Audience == "‚Äî" {
				audience.Audience = ""
				break
			}
			audienceString += " " + "__*" + audience.Audience + "*__"
		}
		if subject.Type == "‚Äî" {
			subject.Type = ""
		}
		timeString := fmt.Sprintf("%s-%s |%s\n", subject.Time.Start[0:5], subject.Time.End[0:5], audienceString)
		var teacherString string
		for _, teacher := range subject.Teachers {
			if teacher.Teacher == "‚Äî" {
				teacherString = ""
				break
			}
			teacherString += teacher.Teacher + "\n"
		}
		var typeSymbol string
		switch subject.Type {
		case "–ª–∫.":
			typeSymbol = "üü©"
		case "–ø—Ä.–∑.":
			typeSymbol = "üüß"
		case "–ª–∞–±.":
			typeSymbol = "üü¶"
		default:
			typeSymbol = "ü§ç"
		}
		subjectString := fmt.Sprintf("%s*%s |* *%s*\n%s*%s*\n", typeSymbol, subject.Name, subject.Type, timeString, teacherString)
		dateString += subjectString
	}

	return dateString
}

func checkHolderExistence(microUrl string, isStudent bool, holder string) (bool, error) {
	holderType := holderTypeTeacher
	if isStudent {
		holderType = holderTypeGroup
	}

	url := fmt.Sprintf("%s/api/check/%s/%s", microUrl, holderType, holder)
	response, err := http.Get(url) //nolint
	if err != nil {
		log.Println(err)
		return false, err
	}
	if response.StatusCode != http.StatusOK {
		return false, nil
	}
	return true, nil
}

func getCommonTeacherNames(ctx context.Context, microUrl, name string) ([]string, error) {
	url := fmt.Sprintf("%s/api/associatedWith/%s", microUrl, name)

	client := http.Client{Timeout: 5 * time.Second}

	req, err := http.NewRequestWithContext(ctx, http.MethodGet, url, nil)
	if err != nil {
		return nil, err
	}

	response, err := client.Do(req)
	if err != nil {
		return nil, err
	}
	defer response.Body.Close()

	if response.StatusCode != http.StatusOK {
		return nil, nil
	}

	var teachersNames []string
	if decodeErr := json.NewDecoder(response.Body).Decode(&teachersNames); decodeErr != nil {
		return nil, err
	}
	return teachersNames, nil
}

// –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —á–∏–ª–æ–º, –µ—Å–ª–∏ –æ–Ω–æ —á–∏—Å–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –≤ digit
func isDigit(message string, digit *int) bool {
	var err error
	*digit, err = strconv.Atoi(message)

	return err == nil
}

func formHelpMessage() string {
	text := `
__*–§—É–∫—Ü–∏–∏ –±–æ—Ç–∞:*__
‚Ä¢ *–í—ã–¥–∞–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ –∫–Ω–æ–ø–∫–∞–º*

‚Ä¢ *–í—ã–¥–∞–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ –¥–∞—Ç–µ:*
    "08.01.2002" –∏–ª–∏ "01.10.02"

‚Ä¢ *–í—ã–¥–∞–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ –¥–Ω—é –Ω–µ–¥–µ–ª–∏:*
    "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫" –∏–ª–∏ "–ü–Ω"

‚Ä¢ *–ë—ã—Å—Ç—Ä–æ –º–µ–Ω—è—Ç—å –≥—Ä—É–ø–ø—É/–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:*
	"4-185" –∏–ª–∏ "–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–≤ –ï.–°."

‚Ä¢ *–í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å*
   (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /toggle\_notifier)

‚Ä¢ *–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è*
	"—Ç–∞–π–º–µ—Ä 04:19"

‚Ä¢ *–ò—Å–∫–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:*
    "–ü–æ–∏—Å–∫ –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–≤"
    "–ü–æ–∏—Å–∫ –ö–æ–Ω—Å—Ç"

‚Ä¢ *–ë—ã—Å—Ç—Ä–æ –ø–æ–ª—É—á–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ —Ü–∏—Ñ—Ä–∞–º:*
    0 ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å
    1 ‚Äî –ø–æ–ª—É—á–∏—Ç—å –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–π –¥–µ–Ω—å
   -1 ‚Äî –ø–æ–ª—É—á–∏—Ç—å –≤—á–µ—Ä–∞—à–Ω–∏–π –¥–µ–Ω—å

‚Ä¢ *–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–ø –¥–æ–Ω–∞—Ç–µ—Ä–æ–≤*
	(–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /donate)


*–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —Ç—ã –ø—Ä–∏–¥—É–º–∞–ª –∫–∞–∫ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏–ª–∏ –Ω–∞—à–µ–ª –±–∞–≥, —Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–ø–∏—à–∏ @zipliZ*`
	return text
}

func formServerErr() string {
	serverErrString := `
–ü—Ä–æ–±–ª–µ–º—ã –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞, –æ–∂–∏–¥–∞–π—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è

–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –∫ @anCreny, –µ—Å–ª–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, —Ç–æ –∫ @zipliZ`
	return serverErrString
}

func formDonatorsMessage(donators []repo.Donator) string {
	return fmt.Sprintf(`
*–¢–æ–ø –ª—é–±–∏–º—ã—Ö –Ω–∞–º–∏ –∂–æ—Ä–∏–∫–∞-—Å–ø–∞—Å–∞—Ç–µ–ª–µ–π:*
	*1.__%s__ ‚Äî %d—Ä.*
	*2.__%s__ ‚Äî %d—Ä.*
	*3.__%s__ ‚Äî %d—Ä.*

*–° –∫–∞–∂–¥—ã–º –¥–æ–Ω–∞—Ç–æ–º –≤—ã —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç–µ –∂–∏–∑–Ω—å –º–∏–Ω–∏–º—É–º –æ–¥–Ω–æ–º—É –∂–æ—Ä–∏–∫—É, –∑–∞–¥—É–º–∞–π—Ç–µ—Å—å.
–ï—Å–ª–∏ –≤—ã —Ç–æ–∂–µ –Ω–µ –ª—é–±–∏—Ç–µ –µ—Å—Ç—å –∂–æ—Ä–∏–∫–æ–≤ –∏–ª–∏ —Ö–æ—Ç–µ–ª–∏ –±—ã –≤–∏—Å–µ—Ç—å —Å–≤–µ—Ä—Ö—É, –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å –º–æ–∂–Ω–æ:*
‚Ä¢ –ü–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞:
		__\+79807393606__
‚Ä¢ –ü–æ —Å—Å—ã–ª–∫–µ: 
		__https://www.tinkoff.ru/cf/9y6xKQyaGH3__

*–∂–æ—Ä–∏–∫ ‚Äî ü™≥*`,
		donators[0].Name, donators[0].AmountOfDonation,
		donators[1].Name, donators[1].AmountOfDonation,
		donators[2].Name, donators[2].AmountOfDonation,
	)
}

func formStartMessage() string {
	return `
*–ï—Å–ª–∏ –≤—ã —Å—Ç—É–¥–µ–Ω—Ç, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã*
 –ø—Ä–∏–º–µ—Ä \"4-185\"
*–ï—Å–ª–∏ –≤—ã —É—á–∏—Ç–µ–ª—å, —Ç–æ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –§–ò–û*
 –ø—Ä–∏–º–µ—Ä \"–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–≤ –ï.–°.\"

–í–µ—Å—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ \–º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥–æ–π */help*
`
}
